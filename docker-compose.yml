version: "3.9"

## se controlan con up y down, igualmente se crean y eliminan los contenedores
services:

  ## Nombre del contenedor
  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=ms-usuarios
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    networks:
      - spring

  ## Nombre del contenedor
  postgres15:
    container_name: postgres15
    image: postgres:15.2-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ms-cursos
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  ## Nombre del contenedor
  ms-usuarios:
    container_name: ms-usuarios
    ## Obtener desde docker hub
    image: camilomeneses/usuarios:latest
    ## Build local
    #build:
    #  context: ./
    #  dockerfile: ./ms-usuarios/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - APP_NAME=ms-usuarios
      - PORT=8001
      - DB_HOST=mysql8:3306
      - DB_DATABASE=ms-usuarios
      - DB_USERNAME=admin
      - DB_PASSWORD=password
      - CURSOS_URL=ms-cursos:8002
    networks:
      - spring
    depends_on:
      - mysql8
    restart: always

  ## Nombre del contenedor
  ms-cursos:
    container_name: ms-cursos
    ## Obtener desde docker hub
    image: camilomeneses/cursos:latest
    ## Build local
    #build:
    #  context: ./
    #  dockerfile: ./ms-cursos/Dockerfile
    ports:
      - "8002:8002"
    environment:
      - APP_NAME=ms-cursos
      - PORT=8002
      - DB_HOST=postgres15:5432
      - DB_DATABASE=ms-cursos
      - DB_USERNAME=admin
      - DB_PASSWORD=password
      - USUARIOS_URL=ms-usuarios:8001
    networks:
      - spring
    depends_on:
      - postgres15
      - ms-usuarios
    restart: always

## Los volumes no se afectan con la ejecucion del compose up y down
## Definicion de volumes
volumes:
  data-mysql:
    name: data-mysql
  data-postgres:
    name: data-postgres

## Definicion de networks
networks:
  spring:
    name: spring